# techsupport24-7.com domain

server {
    listen  443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/techsupport24-7.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/techsupport24-7.com/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name techsupport24-7.com;

    # Only requests to our Host are allowed
    if ($host !~ ^(techsupport24-7.com)$ ) {
        return 444;
    }

    location / {
        root   /opt/techsupport/;
        index  index.html;
    }

    location /login/ {
        proxy_set_header Access-Control-Allow-Origin *;
        proxy_pass http://mangos;
        proxy_set_header Host $host;
    }

    location /logout/ {
        proxy_set_header Access-Control-Allow-Origin *;
        proxy_pass http://mangos;
        proxy_set_header Host $host;
    }

    location /transactions/ {
        proxy_pass http://extractors;
        proxy_set_header Host $host;
    }

    location /search/ {
        proxy_set_header Host $host;
        proxy_redirect off;

        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;

        proxy_buffer_size          64k;     # If set to a smaller value,
                                            # nginx can complain with an
                                            # "too large headers" error
        proxy_buffers              4 64k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;


        if ($request_method != GET) {
          return 405;
        }

        if ($request_method = GET) {
          proxy_pass http://riak_nodes;
        }
    }

    location /users/ {
        proxy_pass http://mangos;
        proxy_set_header Host $host;
    }

    location /tasks/ {
        proxy_pass http://mangos;
        proxy_set_header Host $host;
    }

    location = /favicon.ico {
        rewrite (.*) /static/img/favicon.ico;
    }

    location = /robots.txt {
        rewrite (.*) /static/robots.txt;
    }

    location = /humans.txt {
        rewrite (.*) /static/humans.txt;
    }
}

server {
    listen 80;
    server_name techsupport24-7.com;
    return 301 https://$host$request_uri;
}

server {
    listen 80;

    root /opt/techsupport/;
    index index.html index.htm;

    server_name www.techsupport24-7.com;
    rewrite ^/(.*) https://techsupport24-7.com/$1 permanent;
}