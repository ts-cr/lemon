# nginx server configuration

user www-data;
worker_processes 4;
pid /var/run/nginx.pid;

error_log /var/log/nginx/error.log;

events {
    worker_connections 1024;
    use epoll;
}

http {
    # Enumerate backend servers here

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }


    #

    #

    #

    #       HELLO, PLEASE USE CONSUL TEMPLATES INSTEAD OF SALT PILLAR THANKS!
    
    #

    #

    #

    # starfruit servers
    upstream starfruits {
        server {{ salt['pillar.get']('nginx:upstream:starfruits:uno', '127.0.0.1:3888') }};
    }

    # cockroach servers
    upstream cockroachs {
        server {{ salt['pillar.get']('nginx:upstream:cockroachs:uno', '127.0.0.1:6257') }};
    }

    # treehouses servers
    upstream treehouses {
        server {{ salt['pillar.get']('nginx:upstream:treehouses:uno', '127.0.0.1:8002') }};
    }

    # rtc spider servers
    upstream spiders {
        server {{ salt['pillar.get']('nginx:upstream:spiders:uno', '127.0.0.1:8003') }};
    }

    # rtc howler servers
    upstream howlers {
        server {{ salt['pillar.get']('nginx:upstream:howlers:uno', '127.0.0.1:8004') }};
    }

    # grape leads api
    upstream grapes {
        server {{ salt['pillar.get']('nginx:upstream:grapes:uno', '127.0.0.1:8005') }};
    }

    # extractor servers
    upstream extractors {
        server {{ salt['pillar.get']('nginx:upstream:extractors:uno', '127.0.0.1:8006') }};
    }

    # firestarter servers
    upstream firestarters {
        server {{ salt['pillar.get']('nginx:upstream:firestarters:uno', '127.0.0.1:8349') }};
    }


    # cebus servers
    upstream cebus {
        server {{ salt['pillar.get']('nginx:upstream:cebus:uno', '127.0.0.1:8538') }};
    }

    # simon servers
    upstream simons {
        server {{ salt['pillar.get']('nginx:upstream:simons:uno', '127.0.0.1:8539') }};
    }    

    # mango servers
    upstream mangos {
        server {{ salt['pillar.get']('nginx:upstream:mangos:uno', '127.0.0.1:8888') }};
    }    

    # kong-gateways servers
    upstream kong-gateways {
        server {{ salt['pillar.get']('nginx:upstream:kong-gateways:uno', '127.0.0.1:8000') }};
    }

    # graphite servers
    upstream graphites {
        server {{ salt['pillar.get']('nginx:upstream:graphites:uno', '127.0.0.1:8088') }};
    }

    # grafana servers
    upstream grafanas {
        server {{ salt['pillar.get']('nginx:upstream:grafanas:uno', '127.0.0.1:3000') }};
    }

    # riak nodes
    upstream riak_nodes {
        server {{ salt['pillar.get']('nginx:upstream:riak:uno', '127.0.0.1:8098') }};
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    
    keepalive_timeout 65;
    proxy_read_timeout 200;
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_static on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # to avoid propagating "queries of death" to all frontends
    proxy_next_upstream error;

    # include all .conf files in a directory
    include /etc/nginx/conf.d/*.conf;
}