# nonsense.ws domain

server {
    listen  443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/nonsense.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nonsense.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name nonsense.ws;

    root /opt/nonsense/;
    index index.html;

    # Only requests to our Host are allowed
    if ($host !~ ^(nonsense.ws)$ ) {
        return 444;
    }

    # Any route containing a file extension (e.g. /devicesfile.js)
    location ~ ^.+\..+$ {
        try_files $uri =404;
    }

    # Any route that doesn't have a file extension (e.g. /devices)
    location / {
        try_files $uri /index.html;
    }

    # Allow file uploads
    client_max_body_size 100M;

    location = /favicon.ico {
        rewrite (.*) /static/img/favicon.ico;
    }

    location = /robots.txt {
        rewrite (.*) /static/robots.txt;
    }

    location = /humans.txt {
        rewrite (.*) /static/humans.txt;
    }
}

server {
    listen 443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/nonsense.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nonsense.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    root /opt/nonsense;
    index index.html index.htm;

    server_name www.nonsense.ws;
    rewrite ^/(.*) https://nonsense.ws/$1 permanent;
}

server {
    listen 80;
    server_name nonsense.ws;
    return 301 https://$host$request_uri;
}

server {
    listen 80;

    root /opt/nonsense;
    index index.html index.htm;

    server_name www.nonsense.ws;
    rewrite ^/(.*) https://nonsense.ws/$1 permanent;
}

# graph.nonsense.ws domain
server {
    listen  443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/graph.nonsense.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/graph.nonsense.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name graph.nonsense.ws;

    # Only requests to our Host are allowed
    if ($host !~ ^(graph.nonsense.ws)$ ) {
        return 444;
    }

    location / {
        proxy_pass http://graphites;
        proxy_set_header Host $host;
    }

    location /static/ {
        alias /opt/graphite/static/;
    }

    # Allow file uploads
    client_max_body_size 10M;
}

server {
    listen 80;
    server_name graph.nonsense.ws;
    return 301 https://$host$request_uri;
}

# stats.nonsense.ws domain
server {
    listen  443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/stats.nonsense.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stats.nonsense.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name stats.nonsense.ws;

    # Only requests to our Host are allowed
    if ($host !~ ^(stats.nonsense.ws)$ ) {
        return 444;
    }

    location / {
        proxy_pass http://grafanas;
        proxy_set_header Host $host;
    }

    # Allow file uploads
    client_max_body_size 10M;
}

server {
    listen 80;
    server_name stats.nonsense.ws;
    return 301 https://$host$request_uri;
}

# sql.nonsense.ws domain
server {
    listen  443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/sql.nonsense.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sql.nonsense.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name sql.nonsense.ws;

    # Only requests to our Host are allowed
    if ($host !~ ^(sql.nonsense.ws)$ ) {
        return 444;
    }

    location / {
        proxy_pass http://cockroachs;
        proxy_set_header Host $host;
    }

    # Allow file uploads
    client_max_body_size 10M;
}

server {
    listen 80;
    server_name sql.nonsense.ws;
    return 301 https://$host$request_uri;
}

# consul.nonsense.ws domain
server {
    listen  443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/consul.nonsense.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/consul.nonsense.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name consul.nonsense.ws;

    # Only requests to our Host are allowed
    if ($host !~ ^(consul.nonsense.ws)$ ) {
        return 444;
    }

    # Saltpad specific
    root /opt/consul/webui/;
    index index.html;

    location / {
        try_files $uri /index.html;
    }

    # Allow file uploads
    client_max_body_size 10M;
}

server {
    listen 80;
    server_name consul.nonsense.ws;
    return 301 https://$host$request_uri;
}

# salt.nonsense.ws domain
server {
    listen 80;
    server_name salt.nonsense.ws;

    # Only requests to our Host are allowed
    if ($host !~ ^(salt.nonsense.ws)$ ) {
        return 444;
    }

    # Saltpad specific
    root /opt/saltpad/;
    index index.html;

    location / {
        try_files $uri /index.html;
    }    

    # Allow file uploads
    client_max_body_size 10M;
}

# nginx server status

server {
    listen 8181;
    
    location /status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}