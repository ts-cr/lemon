# cloudforest.ws domain

server {
    listen  443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/cloudforest.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloudforest.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name cloudforest.ws;

    # Only requests to our Host are allowed
    if ($host !~ ^(cloudforest.ws)$ ) {
        return 444;
    }

    location / {
        root   /opt/erebus/;
        index  index.html;
    }

    location = /favicon.ico {
        rewrite (.*) /static/img/favicon.ico;
    }

    location = /robots.txt {
        rewrite (.*) /static/robots.txt;
    }

    location = /humans.txt {
        rewrite (.*) /static/humans.txt;
    }
}

server {
    listen 80;
    server_name cloudforest.ws;
    return 301 https://$host$request_uri;
}

server {
    listen 80;

    root /opt/erebus;
    index index.html index.htm;

    server_name www.cloudforest.ws;
    rewrite ^/(.*) https://cloudforest.ws/$1 permanent;
}

# api.cloudforest.ws domain
server {
    listen  443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/api.cloudforest.ws/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.cloudforest.ws/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    server_name api.cloudforest.ws;

    # Only requests to our Host are allowed
    if ($host !~ ^(api.cloudforest.ws)$ ) {
        return 444;
    }

    location / {
        proxy_pass http://kong-gateways;
        proxy_set_header Host $host;
    }
    
}

server {
    listen 80;
    server_name api.cloudforest.ws;
    return 301 https://$host$request_uri;
}